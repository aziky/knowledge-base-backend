server:
  servlet:
    context-path: /api
  port: 7072

spring:
  application:
    name: project-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: kb_project
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      #      s3:
      #        bucket: hamster-application
      sqs:
        region: ${AWS_REGION}
        email-queue: ${AWS_SQS_EMAIL_QUEUE}
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

#  cloud:
#    consul:
#      host: localhost
#      port: 8500
#      discovery:
#        prefer-ip-address: true
#        service-name: project-service
#        register: true
#        enabled: true
#        health-check-path: /actuator/health
#        health-check-interval: 10s
# ...existing config...

openapi:
  server-url: http://localhost:7072/project-service/api

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: methods
    tags-sorter: alpha
    display-request-duration: true
    default-model-expand-depth: 10
    display-operation-id: true
#
#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka/
#  instance:
#    prefer-ip-address: true

host:
  frontend-host: http://localhost:3000/verified-successfully
  backend-host: http://localhost:7070/project-service/api
  verified-invitation: /project/verified-invitation